DECLARE
    l_job_id NUMBER;
BEGIN
    -- Get job_id from page item
    l_job_id := :P5_JOB_ID;

    -- Safety check
    IF l_job_id IS NULL THEN
        raise_application_error(-20001, 'No job_id provided.');
    END IF;

    -- Delete rows with that job_id
    DELETE FROM bulk_resolution_data1
    WHERE job_id = l_job_id;

    COMMIT;

    DBMS_OUTPUT.PUT_LINE('Deleted rows for JOB_ID=' || l_job_id);
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error deleting rows: ' || SQLERRM);
        raise;
END;





SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,

    -- Virtual column with Cancel button
    '<button class="t-Button t-Button--danger t-Button--small" '||
    'onclick="apex.submit({request: ''CANCEL_'||job_id||'''});return false;">Cancel</button>' 
    AS cancel_button

FROM bulk_resolution_data
ORDER BY job_id DESC





SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,

    -- Virtual column with Cancel button
    '<button class="t-Button t-Button--danger t-Button--small" 
        onclick="apex.item(''P5_JOB_ID'').setValue('||job_id||');
                 apex.submit({request:''CANCEL_ROW''});return false;">Cancel</button>' 
    AS cancel_button

FROM bulk_resolution_data
ORDER BY job_id DESC







BEGIN
  DELETE FROM bulk_resolution_data1
   WHERE job_id = :P5_JOB_ID;

  DELETE FROM bulk_resolution_data
   WHERE job_id = :P5_JOB_ID;

  COMMIT;

  APEX_DEBUG.MESSAGE('Deleted JOB_ID='||:P5_JOB_ID);
EXCEPTION
  WHEN OTHERS THEN
    APEX_DEBUG.ERROR('Error deleting JOB_ID='||:P5_JOB_ID||' - '||SQLERRM);
    RAISE;
END;





SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,

    -- Virtual column with Cancel link (no submit yet)
    '<button class="t-Button t-Button--danger t-Button--small cancel-row" 
        data-jobid="'||job_id||'">Cancel</button>' 
    AS cancel_button
FROM bulk_resolution_data
ORDER BY job_id DESC




BEGIN
  DELETE FROM bulk_resolution_data1
   WHERE job_id = :P5_JOB_ID;

  DELETE FROM bulk_resolution_data
   WHERE job_id = :P5_JOB_ID;

  COMMIT;
END;




SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,
    --
    '<a href="javascript:void(0);" 
        class="t-Button t-Button--danger t-Button--small cancel-row"
        data-jobid="'||job_id||'">
        Cancel
     </a>' cancel_button
FROM bulk_resolution_data
ORDER BY job_id DESC





// ====== True Action JS for .cancel-row click ======
(function(){
  var $btn = $(this.triggeringElement);          // clicked button
  var jobId = $btn.data("jobid");                // read data-jobid attribute

  if (!jobId) {
    apex.message.alert("Job id not found for this row.");
    return;
  }

  // confirmation
  apex.message.confirm("Are you sure you want to cancel JOB_ID " + jobId + " ?",
    function( ok ) {
      if (!ok) { return; }

      // disable clicked button to prevent double-click
      $btn.prop("disabled", true);

      // Optionally show a small spinner near the button (optional)
      // var spinner = $("<span class='fa fa-spinner fa-spin ml-2'></span>").insertAfter($btn);

      // call Ajax Callback DELETE_ROW, pass jobId in x01
      apex.server.process(
        "DELETE_ROW",            // name of Ajax Callback process (create in Step 5)
        { x01: jobId },          // request payload
        {
          success: function(pData) {
            // refresh IR region (use your IR Static ID)
            apex.region("ir_bulk_jobs").refresh();

            // show success notification
            apex.message.showPageSuccess("JOB_ID " + jobId + " deleted.");
          },
          error: function (jqXHR, textStatus, errorThrown) {
            apex.message.alert("Error deleting JOB_ID " + jobId + ": " + errorThrown);
          },
          complete: function() {
            // cleanup: re-enable button and remove spinner if used
            $btn.prop("disabled", false);
            // spinner.remove();
          }
        }
      ); // apex.server.process
  }); // confirm
})();




DECLARE
    l_job_id NUMBER;
BEGIN
    -- Get job_id from page item
    l_job_id := :P5_JOB_ID;

    -- Safety check
    IF l_job_id IS NULL THEN
        raise_application_error(-20001, 'No job_id provided.');
    END IF;

    -- Delete rows with that job_id
    DELETE FROM bulk_resolution_data1
    WHERE job_id = l_job_id;

    COMMIT;

    DBMS_OUTPUT.PUT_LINE('Deleted rows for JOB_ID=' || l_job_id);
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error deleting rows: ' || SQLERRM);
        raise;
END;





SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,

    -- Virtual column with Cancel button
    '<button class="t-Button t-Button--danger t-Button--small" '||
    'onclick="apex.submit({request: ''CANCEL_'||job_id||'''});return false;">Cancel</button>' 
    AS cancel_button

FROM bulk_resolution_data
ORDER BY job_id DESC





SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,

    -- Virtual column with Cancel button
    '<button class="t-Button t-Button--danger t-Button--small" 
        onclick="apex.item(''P5_JOB_ID'').setValue('||job_id||');
                 apex.submit({request:''CANCEL_ROW''});return false;">Cancel</button>' 
    AS cancel_button

FROM bulk_resolution_data
ORDER BY job_id DESC






SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,
    -- CANCEL button: sets P5_JOB_ID in browser and submits with request CANCEL_ROW
    '<button type="button" class="t-Button t-Button--danger t-Button--small cancel-row" '
    || 'onclick="apex.item(''P5_JOB_ID'').setValue('||job_id||'); apex.submit({request: ''CANCEL_ROW''}); return false;">Cancel</button>'
    AS cancel_button
FROM bulk_resolution_data
ORDER BY job_id DESC




BEGIN
  -- basic safety: ensure P5_JOB_ID provided
  IF :P5_JOB_ID IS NULL THEN
    raise_application_error(-20001, 'No JOB_ID provided for delete.');
  END IF;

  -- delete details first
  DELETE FROM bulk_resolution_data1
   WHERE job_id = TO_NUMBER(:P5_JOB_ID);

  -- then delete header
  DELETE FROM bulk_resolution_data
   WHERE job_id = TO_NUMBER(:P5_JOB_ID);

  COMMIT;
EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    -- re-raise so APEX shows error (or you can log it)
    RAISE;
END;


'<button type="button" class="t-Button t-Button--danger t-Button--small" 
 data-jobid="'||job_id||'">Cancel</button>'
 as cancel_button






var jobId = $(this.triggeringElement).data('jobid');
// set page item value
apex.item('P5_JOB_ID').setValue(jobId);
// now submit page with request
apex.submit({request: 'CANCEL_ROW'});






var jobId = $(this.triggeringElement).data('jobid'); 
apex.item("P5_JOB_ID").setValue(jobId);

// Wait a moment to ensure value is set
setTimeout(function(){
  apex.submit({request: "CANCEL_ROW"});
}, 50);


BEGIN
  IF :P5_JOB_ID IS NULL THEN
    raise_application_error(-20001, 'No JOB_ID provided for delete.');
  END IF;

  -- delete child table first
  DELETE FROM bulk_resolution_data1 WHERE job_id = :P5_JOB_ID;

  -- delete header
  DELETE FROM bulk_resolution_data WHERE job_id = :P5_JOB_ID;

  COMMIT;
END;






var jobId = $(this.triggeringElement).data('jobid');

// Set the value in the page item
apex.item("P5_JOB_ID").setValue(jobId);

// Force the value to be saved to session state right away:
apex.server.process(
  "SET_JOB_ID",                  // name of a small process we create below
  { x01: jobId },                // pass the job id
  {
    success: function(){
      // Now submit the page AFTER session state is updated
      apex.submit({request: "CANCEL_ROW"});
    }
  }
);








var jobId = $(this.triggeringElement).data('jobid');

// Ask the user first
if (confirm("Are you sure you want to cancel this row?")) {

  // Set the value in the page item
  apex.item("P5_JOB_ID").setValue(jobId);

  // Force the value to be saved to session state right away:
  apex.server.process(
    "SET_JOB_ID",                  // name of a small process we create below
    { x01: jobId },                // pass the job id
    {
      success: function(){
        // Now submit the page AFTER session state is updated
        apex.submit({request: "CANCEL_ROW"});
      }
    }
  );

}




var jobId = $(this.triggeringElement).data('jobid');

// First confirm before deleting
if (confirm("Are you sure you want to cancel this row?")) {

  // Set the value in the page item
  apex.item("P5_JOB_ID").setValue(jobId);

  // Force the value to be saved to session state right away:
  apex.server.process(
    "SET_JOB_ID",                  // name of your AJAX process
    { x01: jobId },                // pass the job id
    {
      success: function(){
        // After session state is updated, submit the page to run the delete process
        apex.submit({
          request: "CANCEL_ROW",
          showWait: true, // optional spinner
          // After the page submit completes, show message
          afterSubmit: function(){
            alert("Row deleted successfully.");
          }
        });
      }
    }
  );

}




SELECT 
    job_id,
    submission,
    date_added,
    status,
    user_added,

    CASE 
      WHEN status = 'SUCCESSFUL' THEN
        -- disabled button
        '<button class="t-Button t-Button--danger t-Button--small" disabled>Cancel</button>'
      ELSE
        -- active button
        '<button class="t-Button t-Button--danger t-Button--small cancel-row" '||
        'data-jobid="'||job_id||'">Cancel</button>'
    END AS cancel_button

FROM bulk_resolution_data
ORDER BY job_id DESC;







<div style="display:flex; gap:20px; align-items:center; justify-content:center;">
  <div style="
       background-color:#4CAF50;
       color:white;
       padding:20px;
       border-radius:10px;
       font-size:20px;
       min-width:120px;
       text-align:center;">
    ✅ Good  
    <div style="font-size:32px; font-weight:bold;">&P5_GOOD_COUNT.</div>
  </div>

  <div style="
       background-color:#F44336;
       color:white;
       padding:20px;
       border-radius:10px;
       font-size:20px;
       min-width:120px;
       text-align:center;">
    ❌ Bad  
    <div style="font-size:32px; font-weight:bold;">&P5_BAD_COUNT.</div>
  </div>
</div>






<div style="
  background: linear-gradient(90deg, #0066cc, #00b3b3);
  color: #fff;
  padding: 20px;
  text-align: center;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0,0,0,0.2);
  font-family: 'Segoe UI', Arial, sans-serif;
">
  <h1 style="
    font-size: 28px;
    margin: 0;
    letter-spacing: 2px;
    text-transform: uppercase;
  ">
    <i class="fa fa-database" style="margin-right:10px;"></i>
    PTS BULK RESOLUTION
  </h1>
  <p style="
    font-size: 14px;
    margin-top: 5px;
    color: #e0e0e0;
  ">
    Manage your bulk file submissions with ease
  </p>
</div>
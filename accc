SELECT *
FROM TABLE(
    apex_data_parser.parse(
        p_content   => (SELECT blob_content
                        FROM apex_application_temp_files
                        WHERE name = :P1_FILE),  -- uploaded file
        p_file_name => (SELECT filename
                        FROM apex_application_temp_files
                        WHERE name = :P1_FILE),
        p_skip_rows => 1  -- skip header row if needed
    )
)



SELECT name, filename, created_on 
FROM apex_application_temp_files
ORDER BY created_on DESC;


SELECT
    col001 AS job_id,
    col002 AS submission,
    TO_DATE(col003, 'DD/MM/YYYY') AS date_added,
    col004 AS status,
    col005 AS user_added
FROM TABLE(
    apex_data_parser.parse(
        p_content   => (SELECT blob_content
                        FROM apex_application_temp_files
                        WHERE name = :P1_FILE),
        p_file_name => (SELECT filename
                        FROM apex_application_temp_files
                        WHERE name = :P1_FILE),
        p_skip_rows => 1
    )
)



DECLARE
    l_blob      BLOB;
    l_filename  VARCHAR2(255);
BEGIN
    SELECT blob_content, filename
    INTO   l_blob, l_filename
    FROM apex_application_temp_files
    WHERE name = :P1_FILE_UPLOAD;

    FOR rec IN (
        SELECT *
        FROM TABLE(
            apex_data_parser.parse(
                p_content   => l_blob,
                p_file_name => l_filename,
                p_skip_rows => 1
            )
        )
    )
    LOOP
        INSERT INTO my_temp_table (
            job_id,
            submission,
            date_added,
            status,
            user_added
        )
        VALUES (
            rec.col001,
            rec.col002,
            rec.col003,
            rec.col004,
            rec.col005
        );
    END LOOP;
END;







declare
    l_blob    blob;
    l_data    apex_data_parser.t_values;        -- Holds all rows
    l_row     apex_data_parser.t_column_values; -- Holds one row's columns
begin
    -- Get the uploaded Excel BLOB
    select blob_content
    into l_blob
    from apex_application_temp_files
    where name = :P1_FILE_UPLOAD_FILENAME;

    -- Delete previous collection
    if apex_collection.collection_exists('EXCEL_PREVIEW') then
        apex_collection.delete_collection('EXCEL_PREVIEW');
    end if;

    apex_collection.create_collection('EXCEL_PREVIEW');

    -- Parse Excel
    l_data := apex_data_parser.parse(
                  p_content   => l_blob,
                  p_file_name => :P1_FILE_UPLOAD_FILENAME
              );

    -- Loop through each row
    for i in 1 .. l_data.count loop
        l_row := l_data(i).column_values;  -- Get one row

        apex_collection.add_member(
            p_collection_name => 'EXCEL_PREVIEW',
            p_c001 => l_row(1),  -- Column 1
            p_c002 => l_row(2),  -- Column 2
            p_c003 => l_row(3),  -- Column 3
            p_c004 => l_row(4),  -- Column 4
            p_c005 => l_row(5)   -- Column 5
        );
    end loop;
end;
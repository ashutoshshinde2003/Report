DECLARE
    l_blob        BLOB;
    l_file_name   VARCHAR2(255);
    l_err_msg     VARCHAR2(4000);
    l_job_id      NUMBER;
    l_seq_no      NUMBER := 0;
    l_success     BOOLEAN := TRUE;
    l_status      VARCHAR2(20);
    l_row_count   NUMBER := 0;
BEGIN
    -- 1. Get latest uploaded file from APEX temp files
    SELECT blob_content, filename
      INTO l_blob, l_file_name
      FROM (
        SELECT blob_content, filename
          FROM apex_application_temp_files
         WHERE application_id = :APP_ID
         ORDER BY created_on DESC
      )
     WHERE ROWNUM = 1;

    -- 2. Generate new JOB_ID from sequence
    SELECT bulk_resolution_seq.NEXTVAL INTO l_job_id FROM dual;

    -- 3. Insert summary header
    INSERT INTO eres_bulk_res_upload_smry (
        job_id, created_by, created_dt, job_status
    ) VALUES (
        l_job_id, :APP_USER, SYSDATE, 'PENDING'
    );

    -- 4. Parse and insert each record
    FOR rec IN (
        SELECT col001 AS pts_res_group_id
          FROM TABLE(
            apex_data_parser.parse(
                p_content   => l_blob,
                p_file_name => l_file_name,
                p_skip_rows => 1
            )
          )
    )
    LOOP
        l_seq_no   := l_seq_no + 1;

        -- ✅ Handle blank / space-only / null values properly
        IF rec.pts_res_group_id IS NULL OR TRIM(rec.pts_res_group_id) IS NULL OR LENGTH(TRIM(rec.pts_res_group_id)) = 0 THEN
            INSERT INTO eres_bulk_res_upload_detail (
                job_id, seq_no, pts_res_group_id, row_status, status
            ) VALUES (
                l_job_id, l_seq_no, rec.pts_res_group_id, 'INVALID', 'Blank / Missing value'
            );
            l_success := FALSE;

        -- ✅ If it’s all digits → VALID
        ELSIF REGEXP_LIKE(TRIM(rec.pts_res_group_id), '^\d+$') THEN
            INSERT INTO eres_bulk_res_upload_detail (
                job_id, seq_no, pts_res_group_id, row_status, status
            ) VALUES (
                l_job_id, l_seq_no, TRIM(rec.pts_res_group_id), 'VALID', NULL
            );

        -- ✅ Everything else → INVALID
        ELSE
            INSERT INTO eres_bulk_res_upload_detail (
                job_id, seq_no, pts_res_group_id, row_status, status
            ) VALUES (
                l_job_id, l_seq_no, TRIM(rec.pts_res_group_id), 'INVALID', 'Non-numeric / bad format'
            );
            l_success := FALSE;
        END IF;

        l_row_count := l_row_count + 1;

    END LOOP;

    -- 5. Clean up temporary file
    DELETE FROM apex_application_temp_files
     WHERE filename = l_file_name;

    -- 6. Update job status
    l_status := 'SCHEDULED';

    UPDATE eres_bulk_res_upload_smry
       SET job_status = l_status
     WHERE job_id = l_job_id;

    COMMIT;

    -- 7. Store job and count details in page items
    :P21_NEW_1_JOBID := l_job_id;
    :JOB_ID          := l_job_id;
    :TOTAL_ROW_COUNT := l_row_count;
    :TOTAL_COUNT     := l_row_count;

    DBMS_OUTPUT.PUT_LINE('Job ID: ' || l_job_id || ' | Total Rows (including blanks): ' || l_row_count);

EXCEPTION
    WHEN OTHERS THEN
        l_err_msg := SQLERRM;
        DBMS_OUTPUT.PUT_LINE('Fatal error: ' || l_err_msg);
        ROLLBACK;
END;
/
DECLARE
    l_blob      BLOB;
    l_file_name VARCHAR2(255);
    l_err_msg   VARCHAR2(4000);
    l_job_id    NUMBER;
    l_success   BOOLEAN := TRUE;
    l_status    VARCHAR2(20);
BEGIN
    -- Get latest uploaded file
    SELECT blob_content, filename
    INTO l_blob, l_file_name
    FROM (
        SELECT blob_content, filename
        FROM apex_application_temp_files
        WHERE application_id = :APP_ID
        ORDER BY created_on DESC
    )
    WHERE ROWNUM = 1;

    -- Generate JOB_ID
    SELECT bulk_resolution_seq.NEXTVAL INTO l_job_id FROM dual;

    -- Insert header first
    INSERT INTO eres_bulk_res_upload_smry
          (job_id, created_by, created_dt, job_status)
    VALUES (l_job_id, :APP_USER, SYSDATE, 'PENDING');

    -- Parse Excel
    FOR rec IN (
        SELECT col001 AS pts_res_group_id
        FROM TABLE(
            apex_data_parser.parse(
                p_content   => l_blob,
                p_file_name => l_file_name,
                p_skip_rows => 1
            )
        )
    )
    LOOP
        BEGIN
            -- check for digits-only
            IF rec.pts_res_group_id IS NOT NULL
               AND REGEXP_LIKE(rec.pts_res_group_id,'^\d+$') THEN
                INSERT INTO eres_bulk_res_upload_detail (
                    job_id,
                    pts_res_grp_id,
                    row_status
                ) VALUES (
                    l_job_id,
                    rec.pts_res_group_id,
                    'VALID'
                );
            ELSE
                -- insert anyway but flagged as INVALID
                INSERT INTO eres_bulk_res_upload_detail (
                    job_id,
                    pts_res_grp_id,
                    row_status
                ) VALUES (
                    l_job_id,
                    rec.pts_res_group_id,
                    'INVALID'
                );
                l_success := FALSE;
            END IF;

        EXCEPTION
            WHEN OTHERS THEN
                l_success := FALSE;
                l_err_msg := SQLERRM;
                DBMS_OUTPUT.PUT_LINE(
                    'Error inserting PTS_RES_GROUP_ID='||rec.pts_res_group_id||
                    ' : '||l_err_msg
                );
        END;
    END LOOP;

    -- Cleanup temp file
    DELETE FROM apex_application_temp_files
    WHERE filename = l_file_name;

    -- Decide header status
    IF l_success THEN
        l_status := 'SCHEDULED';
        :P21_NEW_2 := 'Y';
        :P21_NEW_1 := l_job_id;
        :JOB_ID := :P21_NEW_1;
        :USER_PREVIEW := :P21_NEW_2;
    ELSE
        l_status := 'FAILED';
        :P21_NEW_2 := 'N';
        :USER_PREVIEW := 'N';
    END IF;

    -- Update header log status
    UPDATE eres_bulk_res_upload_smry
       SET job_status = l_status
     WHERE job_id = l_job_id;

    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        l_err_msg := SQLERRM;
        DBMS_OUTPUT.PUT_LINE('Fatal error: '||l_err_msg);

        -- Still record header failure
        INSERT INTO eres_bulk_res_upload_smry
              (job_id, created_by, created_dt, job_status)
        VALUES (NVL(l_job_id, bulk_resolution_seq.NEXTVAL),
                :APP_USER, SYSDATE, 'FAILED');

        ROLLBACK;
END;
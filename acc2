SELECT 
    br1.pts_res_group_id,
    MAX(pts.mer_num) AS mer_num,
    SUM(pts.us_currency_amt) AS us_currency_amt,
    MAX(pts.trn_dt) AS trn_dt,
    MAX(pts.susp_reas_cd) AS susp_reas_cd,
    MAX(pts.work_of_dt) AS work_of_dt,
    MAX(pts.case_status_id) AS case_status_id,
    DECODE(MAX(pts.case_status_id), 20, 'Already Closed', 'Scheduled') AS status
FROM apex_mod.eres_bulk_res_upload_detail br1
JOIN eresuser_owner.pts_case pts
  ON TO_NUMBER(br1.pts_res_group_id) = pts.pts_res_group_id
WHERE br1.job_id = :JOB_ID
  AND br1.row_status = 'VALID'
GROUP BY br1.pts_res_group_id
ORDER BY MAX(pts.work_of_dt) DESC;




SELECT 
    br1.pts_res_group_id,
    br1.seq_no,
    br1.row_status,
    br1.status
FROM apex_mod.eres_bulk_res_upload_detail br1
WHERE br1.job_id = :JOB_ID
  AND br1.row_status = 'INVALID'
ORDER BY br1.seq_no;




BEGIN
  -- Mark rows as VALID or INVALID based on whether they are pure numbers
  UPDATE eres_bulk_res_upload_detail
     SET row_status = CASE
                        WHEN REGEXP_LIKE(pts_res_group_id, '^\d+$') THEN 'VALID'
                        ELSE 'INVALID'
                      END
   WHERE job_id = :JOB_ID;
END;
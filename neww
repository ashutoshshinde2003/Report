<ul class="a-IRR-pagination"><li class="a-IRR-pagination-item"><span class="a-IRR-pagination-label">                 176 -                  200</span></li><li class="a-IRR-pagination-item"><button type="button" class="a-Button a-IRR-button a-IRR-button--pagination" aria-controls="VALID_RECORDS" title="Previous" aria-label="Previous" data-pagination="pgR_min_row=151max_rows=25rows_fetched=25"><span class="a-Icon icon-left-chevron" aria-hidden="true"></span></button></li><li class="a-IRR-pagination-item"><button type="button" class="a-Button a-IRR-button a-IRR-button--pagination" aria-controls="VALID_RECORDS" title="Next" aria-label="Next" data-pagination="pgR_min_row=201max_rows=25rows_fetched=25"><span class="a-Icon icon-right-chevron" aria-hidden="true"></span></button></li></ul>









(function($){
  // Tagging remains as you already use
  function tagIR(staticId, tag){
    $('#' + staticId + '_toolbar').addClass(tag + '-toolbar');
    $('#' + staticId + '_report').addClass(tag + '-report');
  }

  $(function(){
    tagIR('VALID_RECORDS','valid');
    tagIR('INVALID_RECORDS','invalid');

    ['VALID_RECORDS','INVALID_RECORDS'].forEach(function(staticId){
      initPageJump(staticId);
      apex.jQuery('#' + staticId).on('apexafterrefresh', function(){
        initPageJump(staticId);
      });
    });
  });

  function initPageJump(staticId){
    // remove any existing box
    $('#' + staticId + '_pageJumpWrap').remove();

    // Build input + Go button
    const html = `
      <div id="${staticId}_pageJumpWrap" style="display:inline-flex;align-items:center;gap:6px;margin-left:10px;">
        <label style="font-weight:bold;font-size:13px;">Page:</label>
        <input type="number" id="${staticId}_pageJump" min="1" value="1"
          style="width:60px;text-align:center;border-radius:5px;border:1px solid #ccc;padding:3px;">
        <button id="${staticId}_pageGo" class="t-Button t-Button--small t-Button--primary">Go</button>
      </div>`;

    // Find pagination container (bottom only)
    const pag = $('#' + staticId + '_report').closest('.a-IRR-region').find('.a-IRR-pagination');
    if(pag.length){
      pag.append(html);
    }

    // Attach handler
    $('#' + staticId + '_pageGo').off('click').on('click', function(){
      jumpToPage(staticId);
    });

    $('#' + staticId + '_pageJump').off('keypress').on('keypress', function(e){
      if(e.which === 13){
        e.preventDefault();
        jumpToPage(staticId);
      }
    });
  }

  function jumpToPage(staticId){
    const $region = apex.region(staticId);
    const widget = $region && $region.widget ? $region.widget() : null;
    const $pagination = $('#' + staticId + '_report').closest('.a-IRR-region').find('.a-IRR-pagination');
    const label = $pagination.find('.a-IRR-pagination-label').text().trim();

    // Extract visible range like "176 - 200"
    let match = label.match(/(\d+)\s*-\s*(\d+)/);
    if(!match) return;

    const currentMin = parseInt(match[1],10);
    const currentMax = parseInt(match[2],10);
    const rowsPerPage = currentMax - currentMin + 1;

    const pageInput = parseInt($('#' + staticId + '_pageJump').val(),10);
    if(isNaN(pageInput) || pageInput < 1){
      apex.message.showErrors([{type:"error",message:"Enter valid page number"}]);
      return;
    }

    const newMin = (pageInput - 1) * rowsPerPage + 1;

    // Call native APEX worksheet paginate API
    try {
      widget.worksheet('paginate', { p_pg_min_row: newMin });
    } catch(e){
      console.warn('APEX paginate fallback', e);
      // fallback click next multiple times (only if paginate not found)
      const $next = $pagination.find('button[title="Next"]');
      const $prev = $pagination.find('button[title="Previous"]');
      if($next.length && pageInput > 1){
        for(let i=1;i<pageInput;i++){
          $next.get(0).click();
        }
      } else if(pageInput === 1 && $prev.length){
        // jump to first page
        location.reload();
      }
    }
  }

})(apex.jQuery);

(function($){

  // Keep your tagging as before
  function tagIR(staticId, tag){
    $('#' + staticId + '_toolbar').addClass(tag + '-toolbar');
    $('#' + staticId + '_report').addClass(tag + '-report');
  }

  const regions = ['VALID_RECORDS', 'INVALID_RECORDS'];

  $(function(){
    tagIR('VALID_RECORDS','valid');
    tagIR('INVALID_RECORDS','invalid');

    regions.forEach(id => {
      waitForRegion(id, 0);
    });
  });

  function waitForRegion(staticId, attempt){
    attempt = attempt || 0;
    if(attempt > 25) return; // stop after 25 tries

    const reg = apex.region(staticId);
    if(!reg || !reg.element || !reg.element().length){
      setTimeout(()=>waitForRegion(staticId, attempt+1), 250);
      return;
    }

    injectControl(staticId);
    // Reinstate after refresh
    reg.element().off('apexafterrefresh.jumpbox').on('apexafterrefresh.jumpbox', ()=>injectControl(staticId));
  }

  function injectControl(staticId){
    // remove existing
    $('#' + staticId + '_pageJumpWrap').remove();

    // Build HTML for our jump box
    const ctrlId = staticId + '_pageJumpWrap';
    const inputId = staticId + '_pageJump';
    const goId    = staticId + '_pageGo';

    const html = `
      <div id="${ctrlId}" style="display:flex;align-items:center;gap:6px;margin-left:12px;">
        <label for="${inputId}" style="font-weight:bold;font-size:13px;">Page:</label>
        <input type="number" id="${inputId}" min="1" value="1"
          style="width:60px;text-align:center;border:1px solid #ccc;border-radius:5px;padding:3px;">
        <button id="${goId}" class="t-Button t-Button--small t-Button--primary">Go</button>
      </div>`;

    // Find toolbar top-right area where Go + Actions buttons are
    const toolbar = $('#' + staticId + '_toolbar');
    if(toolbar.length){
      const searchArea = toolbar.find('.a-IRR-controls').first(); // near search bar
      if(searchArea.length){
        searchArea.append(html);
      } else {
        toolbar.append(html);
      }
    } else {
      // fallback to region itself
      $('#' + staticId + '_report').before(html);
    }

    // attach handlers
    $(document).off('click.jump.' + staticId, '#' + goId);
    $(document).on('click.jump.' + staticId, '#' + goId, ()=>doJump(staticId, inputId));

    $(document).off('keypress.jump.' + staticId, '#' + inputId);
    $(document).on('keypress.jump.' + staticId, '#' + inputId, (e)=>{
      if(e.which === 13){ e.preventDefault(); doJump(staticId, inputId); }
    });
  }

  function doJump(staticId, inputId){
    const pageNum = parseInt($('#' + inputId).val(), 10);
    if(isNaN(pageNum) || pageNum < 1){
      apex.message.showErrors([{type:"error",message:"Enter valid page number"}]);
      return;
    }

    const region = apex.region(staticId);
    const toolbar = $('#' + staticId + '_toolbar');
    const pagination = toolbar.find('.a-IRR-pagination').first();

    // Try to locate correct clickable link
    let link = pagination.find(`[data-page="${pageNum}"], [data-apex-page="${pageNum}"]`).first();
    if(!link.length){
      link = pagination.find('a,button,span').filter(function(){
        const t = $(this).text().trim();
        const aria = ($(this).attr('aria-label') || '').toLowerCase();
        return t === String(pageNum) || aria.includes('page ' + pageNum);
      }).first();
    }

    if(link.length){
      const el = link.get(0);
      el.dispatchEvent(new MouseEvent('mousedown',{bubbles:true}));
      el.dispatchEvent(new MouseEvent('mouseup',{bubbles:true}));
      el.dispatchEvent(new MouseEvent('click',{bubbles:true}));
    } else {
      // fallback refresh if link not found
      if(region && region.refresh) region.refresh();
    }
  }

})(apex.jQuery);
(function($){
  // Your original tagging function
  function tagIR(staticId, tag){
    $('#' + staticId + '_toolbar').addClass(tag + '-toolbar');
    $('#' + staticId + '_report').addClass(tag + '-report');
  }

  // Apply tagging to both reports
  $(function(){
    tagIR('VALID_RECORDS','valid');
    tagIR('INVALID_RECORDS','invalid');

    // Define both Interactive Report static IDs
    const irRegions = ['VALID_RECORDS', 'INVALID_RECORDS'];

    // Wait until IR is fully initialized, then inject pagination box
    irRegions.forEach(regionId => {
      apex.region(regionId).widget().on('apexafterrefresh', function(){
        createOrUpdatePageJump(regionId);
      });

      // Initial build after a short delay (to ensure IR metadata is ready)
      setTimeout(() => createOrUpdatePageJump(regionId), 800);
    });

    // ---- Function: create or update the jump control ----
    function createOrUpdatePageJump(regionId){
      const ir = apex.region(regionId).widget();
      if (!ir || !ir.options) return;

      const rowsPerPage = ir.options.rowsPerPage || 15;
      const totalRows = ir.options.totalRows || ir.model.getTotalRecords();
      const totalPages = Math.max(1, Math.ceil(totalRows / rowsPerPage));
      const currentPage = ir.options.currentPage || Math.ceil((ir.options.firstRow || 1) / rowsPerPage);

      const inputId = regionId + '_pageJump';
      const goId = regionId + '_pageGo';
      const wrapId = regionId + '_pageJumpWrap';

      // Remove any old controls
      $('#' + wrapId).remove();

      // Build control HTML
      const html = `
        <div id="${wrapId}" style="display:inline-flex; align-items:center; gap:6px; margin-left:10px;">
          <label for="${inputId}" style="font-weight:bold; font-size:13px;">Page:</label>
          <input type="number" id="${inputId}" min="1" max="${totalPages}" value="${currentPage}"
                 style="width:60px; text-align:center; border-radius:6px; padding:3px; border:1px solid #ccc;">
          <span style="font-size:13px;">/ ${totalPages}</span>
          <button id="${goId}" class="t-Button t-Button--primary t-Button--small">Go</button>
        </div>
      `;

      // Append inside the bottom pagination area
      const paginationArea = $('#' + regionId + '_toolbar .a-IRR-paginationWrap--bottom .a-IRR-pagination');
      if (paginationArea.length) paginationArea.append(html);
      else $('#' + regionId + '_toolbar').append(html);

      // Handle Go button click
      $(document).off('click', '#' + goId).on('click', '#' + goId, function(){
        const pageNum = parseInt($('#' + inputId).val(), 10);
        if (isNaN(pageNum) || pageNum < 1 || pageNum > totalPages) {
          apex.message.showErrors([
            { type: 'error', location: 'page', message: 'Enter a valid page between 1 and ' + totalPages }
          ]);
          return;
        }
        ir.worksheet('paginate', { p_pg_min_row: (pageNum - 1) * rowsPerPage + 1 });
      });

      // Handle Enter key
      $(document).off('keypress', '#' + inputId).on('keypress', '#' + inputId, function(e){
        if (e.which === 13) $('#' + goId).click();
      });
    }
  });
})(apex.jQuery);
DECLARE
  v_job_id       NUMBER := :JOB_ID;  -- bind or replace with your actual job id

  ----------------------------------------------------------------
  -- 1) Types
  ----------------------------------------------------------------
  TYPE detail_rec_t IS RECORD (
    ruid              ROWID,
    pts_res_group_id  VARCHAR2(100)
  );
  TYPE detail_tab_t IS TABLE OF detail_rec_t;

  TYPE case_rec_t IS RECORD (
    mer_num         VARCHAR2(50),
    us_currency_amt NUMBER,
    trn_dt          DATE,
    susp_reas_cd    NUMBER,
    work_of_dt      DATE,
    case_status_id  NUMBER
  );
  -- associative array keyed by the trimmed group_id
  TYPE case_map_t IS TABLE OF case_rec_t
    INDEX BY VARCHAR2(100);

  -- arrays for FORALL
  TYPE rowid_tab_t IS TABLE OF ROWID     INDEX BY PLS_INTEGER;
  TYPE mernum_tab_t IS TABLE OF VARCHAR2(50) INDEX BY PLS_INTEGER;
  TYPE num_tab_t   IS TABLE OF NUMBER    INDEX BY PLS_INTEGER;
  TYPE date_tab_t  IS TABLE OF DATE      INDEX BY PLS_INTEGER;

  ----------------------------------------------------------------
  -- 2) Variables
  ----------------------------------------------------------------
  l_details     detail_tab_t;    -- all detail rows
  l_case_map    case_map_t;      -- aggregated PTS_CASE data

  -- VALID lists
  l_valid_rids  rowid_tab_t;
  l_mernum_tab  mernum_tab_t;
  l_amt_tab     num_tab_t;
  l_trndt_tab   date_tab_t;
  l_susp_tab    num_tab_t;
  l_work_tab    date_tab_t;
  l_stat_tab    num_tab_t;
  v_valid_cnt   PLS_INTEGER := 0;

  -- INVALID list
  l_invalid_rids rowid_tab_t;
  v_invalid_cnt  PLS_INTEGER := 0;

BEGIN
  ----------------------------------------------------------------
  -- A) Load aggregated PTS_CASE into l_case_map (field-by-field)
  ----------------------------------------------------------------
  FOR rec IN (
    SELECT
      TRIM(p.pts_res_group_id) AS grp,
      MAX(p.mer_num)          AS mer_num,
      SUM(p.us_currency_amt)  AS us_currency_amt,
      MAX(p.trn_dt)           AS trn_dt,
      MAX(p.susp_reas_cd)     AS susp_reas_cd,
      MAX(p.work_of_dt)       AS work_of_dt,
      MAX(p.case_status_id)   AS case_status_id
    FROM eresuser_owner.pts_case p
    WHERE TRIM(p.pts_res_group_id) IN (
      SELECT TRIM(d.pts_res_group_id)
      FROM apex_mod.eres_bulk_res_upload_detail d
      WHERE d.job_id = v_job_id
    )
    GROUP BY TRIM(p.pts_res_group_id)
  ) LOOP
    l_case_map(rec.grp).mer_num         := rec.mer_num;
    l_case_map(rec.grp).us_currency_amt := rec.us_currency_amt;
    l_case_map(rec.grp).trn_dt          := rec.trn_dt;
    l_case_map(rec.grp).susp_reas_cd    := rec.susp_reas_cd;
    l_case_map(rec.grp).work_of_dt      := rec.work_of_dt;
    l_case_map(rec.grp).case_status_id  := rec.case_status_id;
  END LOOP;

  ----------------------------------------------------------------
  -- B) Bulk-collect ALL detail rows for this job
  ----------------------------------------------------------------
  SELECT ROWID, TRIM(pts_res_group_id)
  BULK COLLECT INTO l_details
  FROM apex_mod.eres_bulk_res_upload_detail
  WHERE job_id = v_job_id;

  ----------------------------------------------------------------
  -- C) Classify each row into VALID / INVALID + build arrays
  ----------------------------------------------------------------
  FOR i IN 1 .. l_details.COUNT LOOP
    DECLARE
      v_id VARCHAR2(100) := l_details(i).pts_res_group_id;
    BEGIN
      IF v_id IS NOT NULL
         AND REGEXP_LIKE(v_id, '^\d+$')
         AND l_case_map.EXISTS(v_id)
      THEN
        -- VALID
        v_valid_cnt := v_valid_cnt + 1;
        l_valid_rids(v_valid_cnt) := l_details(i).ruid;

        l_mernum_tab(v_valid_cnt) := l_case_map(v_id).mer_num;
        l_amt_tab   (v_valid_cnt) := l_case_map(v_id).us_currency_amt;
        l_trndt_tab (v_valid_cnt) := l_case_map(v_id).trn_dt;
        l_susp_tab  (v_valid_cnt) := l_case_map(v_id).susp_reas_cd;
        l_work_tab  (v_valid_cnt) := l_case_map(v_id).work_of_dt;
        l_stat_tab  (v_valid_cnt) := l_case_map(v_id).case_status_id;
      ELSE
        -- INVALID
        v_invalid_cnt := v_invalid_cnt + 1;
        l_invalid_rids(v_invalid_cnt) := l_details(i).ruid;
      END IF;
    END;
  END LOOP;

  ----------------------------------------------------------------
  -- D) Bulk-update VALID records
  ----------------------------------------------------------------
  IF v_valid_cnt > 0 THEN
    FORALL idx IN 1 .. v_valid_cnt
      UPDATE apex_mod.eres_bulk_res_upload_detail d
         SET d.row_status      = 'VALID',
             d.mer_num         = l_mernum_tab(idx),
             d.us_currency_amt = l_amt_tab(idx),
             d.trn_dt          = l_trndt_tab(idx),
             d.susp_reas_cd    = l_susp_tab(idx),
             d.work_of_dt      = l_work_tab(idx),
             d.case_status_id  = l_stat_tab(idx)
       WHERE ROWID = l_valid_rids(idx);
  END IF;

  ----------------------------------------------------------------
  -- E) Bulk-update INVALID records
  ----------------------------------------------------------------
  IF v_invalid_cnt > 0 THEN
    FORALL idx IN 1 .. v_invalid_cnt
      UPDATE apex_mod.eres_bulk_res_upload_detail d
         SET d.row_status      = 'INVALID',
             d.mer_num         = NULL,
             d.us_currency_amt = NULL,
             d.trn_dt          = NULL,
             d.susp_reas_cd    = NULL,
             d.work_of_dt      = NULL,
             d.case_status_id  = NULL
       WHERE ROWID = l_invalid_rids(idx);
  END IF;

  COMMIT;
  DBMS_OUTPUT.PUT_LINE(
    'Completed: VALID='||v_valid_cnt||', INVALID='||v_invalid_cnt
  );

EXCEPTION
  WHEN OTHERS THEN
    ROLLBACK;
    DBMS_OUTPUT.PUT_LINE('Error: '||SQLERRM);
END;






























